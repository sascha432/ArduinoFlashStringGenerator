#
# Author: sascha_lammers@gmx.de
#

[platformio]
default_envs=example

[env]
platform = atmelavr
framework = arduino

monitor_speed = 115200

; files are automatically created before compilation
extra_scripts =
    pre:scripts/spgm_extra_script.py
    post:scripts/post_extra_script.py

; Get the extra include directories from your compiler, for example
; .platformio\packages\toolchain-atmelavr\bin\avr-gcc.exe -E -v -
; .platformio\packages\toolchain-atmelavr\bin\avr-g++.exe -E -v -x c++ -

; extra include directories
; all paths are relative to src_dir of the project
custom_spgm_generator.include_dirs =
    ${platformio.packages_dir}/toolchain-atmelavr/bin/../lib/gcc/avr/5.4.0/include
    ${platformio.packages_dir}/toolchain-atmelavr/bin/../lib/gcc/avr/5.4.0/include-fixed
    ${platformio.packages_dir}/toolchain-atmelavr/bin/../lib/gcc/avr/5.4.0/../../../../avr/include

; exclude any source file or pattern when creating the list of files to preprocess
; it is recommended to add all libraries/directories that do not use PROGMEM strings to speed up compilation
; all paths are relative to src_dir of the project
custom_spgm_generator.source_excludes =
    ${platformio.packages_dir}/framework-arduino-avr/*

; skip any #include statements matching a file or pattern while preprocessing source code
; all paths are relative to src_dir of the project
custom_spgm_generator.skip_includes =
    ../include/example_ignore.h

; list of output languages and fallbacks
custom_spgm_generator.output_language = fr* en default
; custom_spgm_generator.output_language = default

; defaults
; all paths are relative to src_dir of the project
; custom_spgm_generator.definition_file = $PROJECT_SRC_DIR/spgm_auto_strings.cpp
; custom_spgm_generator.declaration_file = $PROJECT_INCLUDE_DIR/spgm_auto_strings.h
; custom_spgm_generator.json_database = $PROJECT_DIR/spgm_json_database.json
; custom_spgm_generator.declaration_include_file = spgm_string_generator.h
; custom_spgm_generator.locations_one_per_line = false


; build strings with 'pio run -t buildspgm'
[env:example]
board = nanoatmega328

src_filter =
    ${env.src_filter}
    -<ignore_me.cpp>
    -<../include/example_ignore.h>
    -<generated/FlashStringGeneratorAuto.cpp>

build_flags =
    -D DEBUG=1
    -D TEST_STRING=\"A\ test\ string\"
